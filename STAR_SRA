from pyrpipe import sra,qc



#Create output directory
DIR='output'
#creates a trim_galore object.
trim_galore=qc.Trimgalore(threads=4)

#Read in run accession IDs from txt file. 
with open ("RAids.txt") as f:
    ra=f.read().splitlines()


	
rule all:
	input: expand("{wd}/{sample}/2ndPass.Aligned.sortedByCoord.out.bam".format(sample=s,wd=DIR) for s in ra)
     
rule STAR1st_pass:
    output:
        "{wd}/{sample}/1stPass.SJ.out.tab"
    run:  
        srrid=str({output}).split("/")[1]
        try:            
            #Download fastq(s) from SRA. Run through trim_galore 
            sra.SRA(srrid,directory=DIR).trim(trim_galore)
            #STAR alignment
            shell(" STAR --runThreadN 30 \
            --genomeDir data/star_index/HomoS \
            --outSAMtype None \
            --limitSjdbInsertNsj 5041695 \
            --outFileNamePrefix {wildcards.wd}/{wildcards.sample}/1stPass. \
            --readFilesIn {wildcards.wd}/{wildcards.sample}/*trimgalore.fastq")                          
            #Record fastq file size
            shell("ls -lhs {wildcards.wd}/{wildcards.sample}/ >> load")
        except:
            print("ERROR in " + srrid)

rule filter:
    input: expand("{wd}/{sample}/1stPass.SJ.out.tab",wd=DIR,sample=ra)
    output: "{wd}/all.SJ.out.tab"    
    shell:
         "awk -f  data/sjCollapseSamples.awk  {input} | sort -k1,1V -k2,2n -k3,3n | awk '{{if($7>2 && $6==0)print}}' > {wildcards.wd}/all.SJ.out.tab"
               
rule STAR2nd_pass: 
    input: "{wd}/all.SJ.out.tab"
    output:
        "{wd}/{sample}/2ndPass.Aligned.sortedByCoord.out.bam"
    run:
        srrid=str({output}).split("/")[1]
        try:
            shell(" STAR --runThreadN 30 \
            --genomeDir data/star_index/HomoS \
            --sjdbFileChrStartEnd {wildcards.wd}/all.SJ.out.tab \
            --limitSjdbInsertNsj 5041695 \
            --outSAMtype BAM SortedByCoordinate \
            --readFilesIn {wildcards.wd}/{wildcards.sample}/*trimgalore.fastq \
            --outFileNamePrefix {wildcards.wd}/{wildcards.sample}/2ndPass.")
        except:
            print("ERROR in " + srrid)           
    
