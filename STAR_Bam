from pyrpipe import sra,qc



#Output directory
DIR='Mason_output'
#creates a trim_galore object.
trim_galore=qc.Trimgalore(threads=4)

#Read in run accession IDs from txt file.
with open ("Bamids.txt") as f:
    ids=f.read().splitlines()


rule all:
        input: expand("{wd}/{sample}/2ndPass.Aligned.sortedByCoord.out.bam",sample=ids,wd=DIR) 

rule STAR1st_pass:
    output:
        "{wd}/{sample}/1stPass.SJ.out.tab"
    run:    
        bamid=str({output}).split("/")[1]
        bam_path='/ocean/projects/mcb200036p/shared/02-AlignedData/'+ bamid + '_all-reads/'  + bamid + '_all-reads_Aligned.sortedByCoord_sorted.out.bam'
        try:
            #Pathway for working directory
            path=DIR + "/" + bamid + "/"
            #Fastq file names and path. 
            fq1=path + bamid + '.1.fastq'
            fq2=path + bamid + '.2.fastq'
            #Run picard to convert bam to fastq
            shell("picard SamToFastq I= " + bam_path + " F= " + fq1 + " F2= " + fq2)
            #Create SRA object and run through trim_galore  
            sra.SRA(fastq=fq1,fastq2=fq2,directory=path).trim(trim_galore)
            #Delet origonal fastq(s)
            shell("ls *fastq | cat | grep -v trim | xargs rm")
            #STAR 1st pass alignment
            shell(" STAR --runThreadN 30 \
            --genomeDir data/star_index_Human \
            --outSAMtype None \
            --limitSjdbInsertNsj 5041695 \
            --outFileNamePrefix {wildcards.wd}/{wildcards.sample}/1stPass. \
            --readFilesIn {wildcards.wd}/{wildcards.sample}/*trimgalore.fastq")
            #Record fastq file size
            shell("ls -lhs {wildcards.wd}/{wildcards.sample}/ >> load")
        except:
            print("ERROR in " + bamid)

rule SJs:
    input: expand("{wd}/{sample}/1stPass.SJ.out.tab",sample=ids,wd=DIR) 
    output: "{wd}/all.SJ.out.tab"
    shell:
         #Combines all SJ.out.tab files from the first pass and removes SJ's that are supported by 2 or less unique mappers. Also removes annotated jusntions since these are already recorded in the genome build.
         "awk -f  data/sjCollapseSamples.awk  {input} | sort -k1,1V -k2,2n -k3,3n | awk '{{if($7>2 && $6==0)print}}' > {wildcards.wd}/all.SJ.out.tab"

rule STAR2nd_pass:
    input: "{wd}/all.SJ.out.tab"
    output:
        "{wd}/{sample}/2ndPass.Aligned.sortedByCoord.out.bam"
    run:
        bamid=str({output}).split("/")[1]
        try:
            #STAR 2nd pass alignment
            shell(" STAR --runThreadN 30 \
            --genomeDir data/star_index_Human \
            --sjdbFileChrStartEnd {wildcards.wd}/all.SJ.out.tab \
            --limitSjdbInsertNsj 5041695 \
            --outSAMtype BAM SortedByCoordinate \
            --readFilesIn {wildcards.wd}/{wildcards.sample}/*trimgalore.fastq \
            --outFileNamePrefix {wildcards.wd}/{wildcards.sample}/2ndPass.")
            shell("rm {wildcards.wd}/{wildcards.sample}/*fastq")
        except:
            print("ERROR in " + bamid)
